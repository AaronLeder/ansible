---
# ================== READ ME ================== #

# ================== READ ME ================== #

- name: Set up Docker repository on Ubuntu
  hosts: all
  order: sorted
  become: true
  gather_facts: true

  tasks:
    - name: Ensure required packages are installed
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: true

    - name: Create directory for Docker GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
        force: true

    - name: Add repo to apt sources
      ansible.builtin.shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker Engine and related packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Run hello-world to verify Docker installation
      ansible.builtin.command: docker run hello-world
      register: docker_output
      failed_when: "'Hello from Docker!' not in docker_output.stdout"
      changed_when: false

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Ensure user/system account is tied to docker group
      ansible.builtin.user:
        name: test
        groups: docker
        append: true